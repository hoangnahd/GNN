digraph G {
    node [shape=box, style="filled, rounded", color="#565f89", fontcolor="#c0caf5", fontname="Helvetica", fillcolor="#24283b"];
    edge [color="#414868", fontcolor="#c0caf5", fontname="Helvetica"];
    bgcolor="#1a1b26";
    0 [ label = "[00] PUSH1 80
[02] PUSH1 40
[04] MSTORE
[05] PUSH1 00
[07] DUP1
[08] PUSH1 00
[0a] DUP1
[0b] PUSH1 00
[0d] CALLER
[0e] PUSH20 ffffffffffffffffffffffffffffffffffffffff
[23] AND
[24] PUSH20 ffffffffffffffffffffffffffffffffffffffff
[39] AND
[3a] DUP2
[3b] MSTORE
[3c] PUSH1 20
[3e] ADD
[3f] SWAP1
[40] DUP2
[41] MSTORE
[42] PUSH1 20
[44] ADD
[45] PUSH1 00
[47] SHA3
[48] SLOAD
[49] EQ
[4a] ISZERO
[4b] ISZERO
[4c] PUSH2 0129
[4f] JUMPI

Stack size req: 0, sizeÎ”: 2
" shape = invhouse]
    1 [ label = "[50] PUSH2 170c
[53] PUSH1 01
[55] PUSH1 00
[57] CALLER
[58] PUSH20 ffffffffffffffffffffffffffffffffffffffff
[6d] AND
[6e] PUSH20 ffffffffffffffffffffffffffffffffffffffff
[83] AND
[84] DUP2
[85] MSTORE
[86] PUSH1 20
[88] ADD
[89] SWAP1
[8a] DUP2
[8b] MSTORE
[8c] PUSH1 20
[8e] ADD
[8f] PUSH1 00
[91] SHA3
[92] SLOAD
[93] NUMBER
[94] SUB
[95] PUSH1 64
[97] PUSH1 07
[99] PUSH1 00
[9b] DUP1
[9c] CALLER
[9d] PUSH20 ffffffffffffffffffffffffffffffffffffffff
[b2] AND
[b3] PUSH20 ffffffffffffffffffffffffffffffffffffffff
[c8] AND
[c9] DUP2
[ca] MSTORE
[cb] PUSH1 20
[cd] ADD
[ce] SWAP1
[cf] DUP2
[d0] MSTORE
[d1] PUSH1 20
[d3] ADD
[d4] PUSH1 00
[d6] SHA3
[d7] SLOAD
[d8] MUL
[d9] DUP2
[da] ISZERO
[db] ISZERO
[dc] PUSH2 00e1
[df] JUMPI

Stack size req: 0, sizeÎ”: 4
"]
    2 [ label = "[e0] INVALID

Stack size req: 0, sizeÎ”: 0
" color = "red"]
    3 [ label = "[e1] JUMPDEST
[e2] DIV
[e3] MUL
[e4] DUP2
[e5] ISZERO
[e6] ISZERO
[e7] PUSH2 00ec
[ea] JUMPI

Stack size req: 4, sizeÎ”: -2
Entry->Op usage:
	0->226:DIV:0
	1->226:DIV:1
	2->227:MUL:1
	3->229:ISZERO:0
Entry->Exit:
	0->ðŸ˜µ
	1->ðŸ˜µ
	2->ðŸ˜µ
"]
    4 [ label = "[eb] INVALID

Stack size req: 0, sizeÎ”: 0
" color = "red"]
    5 [ label = "[ec] JUMPDEST
[ed] DIV
[ee] SWAP2
[ef] POP
[f0] CALLER
[f1] SWAP1
[f2] POP
[f3] DUP1
[f4] PUSH20 ffffffffffffffffffffffffffffffffffffffff
[0109] AND
[010a] PUSH2 08fc
[010d] DUP4
[010e] SWAP1
[010f] DUP2
[0110] ISZERO
[0111] MUL
[0112] SWAP1
[0113] PUSH1 40
[0115] MLOAD
[0116] PUSH1 00
[0118] PUSH1 40
[011a] MLOAD
[011b] DUP1
[011c] DUP4
[011d] SUB
[011e] DUP2
[011f] DUP6
[0120] DUP9
[0121] DUP9
[0122] CALL
[0123] SWAP4
[0124] POP
[0125] POP
[0126] POP
[0127] POP
[0128] POP

Stack size req: 4, sizeÎ”: -2
Entry->Op usage:
	0->237:DIV:0
	1->237:DIV:1
	2->242:POP:0
	3->239:POP:0
Entry->Exit:
	0->ðŸ˜µ
	1->ðŸ˜µ
	2->ðŸ˜µ
	3->ðŸ˜µ
"]
    6 [ label = "[0129] JUMPDEST
[012a] NUMBER
[012b] PUSH1 01
[012d] PUSH1 00
[012f] CALLER
[0130] PUSH20 ffffffffffffffffffffffffffffffffffffffff
[0145] AND
[0146] PUSH20 ffffffffffffffffffffffffffffffffffffffff
[015b] AND
[015c] DUP2
[015d] MSTORE
[015e] PUSH1 20
[0160] ADD
[0161] SWAP1
[0162] DUP2
[0163] MSTORE
[0164] PUSH1 20
[0166] ADD
[0167] PUSH1 00
[0169] SHA3
[016a] DUP2
[016b] SWAP1
[016c] SSTORE
[016d] POP
[016e] CALLVALUE
[016f] PUSH1 00
[0171] DUP1
[0172] CALLER
[0173] PUSH20 ffffffffffffffffffffffffffffffffffffffff
[0188] AND
[0189] PUSH20 ffffffffffffffffffffffffffffffffffffffff
[019e] AND
[019f] DUP2
[01a0] MSTORE
[01a1] PUSH1 20
[01a3] ADD
[01a4] SWAP1
[01a5] DUP2
[01a6] MSTORE
[01a7] PUSH1 20
[01a9] ADD
[01aa] PUSH1 00
[01ac] SHA3
[01ad] PUSH1 00
[01af] DUP3
[01b0] DUP3
[01b1] SLOAD
[01b2] ADD
[01b3] SWAP3
[01b4] POP
[01b5] POP
[01b6] DUP2
[01b7] SWAP1
[01b8] SSTORE
[01b9] POP
[01ba] POP
[01bb] POP
[01bc] STOP

Stack size req: 2, sizeÎ”: -2
Entry->Op usage:
	0->442:POP:0
	1->443:POP:0
Entry->Exit:
	0->ðŸ˜µ
	1->ðŸ˜µ
" color = "darkblue"]
    7 [ label = "[01d7] PUSH21 45

Stack size req: 0, sizeÎ”: 1
" fillcolor = "#703440"]
    0 -> 1 [ label = "False" color = "#f7768e"]
    0 -> 6 [ label = "True" color = "#9ece6a"]
    1 -> 2 [ label = "False" color = "#f7768e"]
    1 -> 3 [ label = "True" color = "#9ece6a"]
    3 -> 4 [ label = "False" color = "#f7768e"]
    3 -> 5 [ label = "True" color = "#9ece6a"]
    5 -> 6 [ ]

}
